# Generated by Django 2.1.7 on 2019-03-22 18:12

import app.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0002_auto_20190320_1351'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityNoteTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=320)),
                ('description', models.CharField(max_length=1000)),
                ('weight', models.IntegerField()),
                ('startDate', models.DateField()),
                ('deadline', models.DateField()),
                ('progress', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentMilestoneTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Assessment')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentTaskTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Assessment')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=320)),
            ],
        ),
        migrations.CreateModel(
            name='MilestoneRequiresTaskTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Milestone')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=320)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleAssessmentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Assessment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Module')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.CharField(max_length=1000)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SemesterModuleTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Module')),
            ],
        ),
        migrations.CreateModel(
            name='StudyActivity',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=320)),
                ('target', models.IntegerField()),
                ('progress', models.FloatField()),
                ('actType', models.CharField(choices=[(app.models.Type('Reading'), 'Reading'), (app.models.Type('Writing'), 'Writing'), (app.models.Type('Studying'), 'Studying'), (app.models.Type('Programming'), 'Programming')], max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='StudyTask',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=320)),
                ('description', models.CharField(max_length=1000)),
                ('duration', models.DurationField()),
                ('progress', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TaskActivityTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyActivity')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyTask')),
            ],
        ),
        migrations.CreateModel(
            name='TaskNoteTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Note')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyTask')),
            ],
        ),
        migrations.CreateModel(
            name='TaskRequiresTaskTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requiredTask', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requiredTask', to='app.StudyTask')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyTask')),
            ],
        ),
        migrations.AlterField(
            model_name='semesterstudyprofile',
            name='uid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='usersemestertable',
            name='semester',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.SemesterStudyProfile'),
        ),
        migrations.AddField(
            model_name='semestermoduletable',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.SemesterStudyProfile'),
        ),
        migrations.AddField(
            model_name='milestonerequirestasktable',
            name='requiredTask',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyTask'),
        ),
        migrations.AddField(
            model_name='assessmenttasktable',
            name='task',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.StudyTask'),
        ),
        migrations.AddField(
            model_name='assessmentmilestonetable',
            name='milestone',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Milestone'),
        ),
        migrations.AddField(
            model_name='activitynotetable',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StudyActivity'),
        ),
        migrations.AddField(
            model_name='activitynotetable',
            name='note',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Note'),
        ),
    ]
